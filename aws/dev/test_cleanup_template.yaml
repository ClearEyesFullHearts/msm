AWSTemplateFormatVersion: 2010-09-09
Description: >
  Resources needed to deploy a scheduled lambda function.

####################################################################################
Parameters:
####################################################################################

  MSMStageName:
    Type: String
    Default: test
    Description: The name of the stage to be created, also used as NODE_ENV

  MSMTableName:
    Type: String
    Default: MyTestTable
    Description: The name of the table to be created.

  AccountCleanupImageName:
    Type: String
    Default: mft-msm-cleanup-account.test.1
    Description: Tag of the image to deploy.

  MessageCleanupImageName:
    Type: String
    Default: mft-msm-clean-message.test.1
    Description: Tag of the image to deploy.

####################################################################################
Resources:
####################################################################################

  MSMCleanupManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: CloudwatchLogs
            Effect: Allow
            Action:
              - logs:CreateLogStream
              - logs:CreateLogGroup
              - logs:PutLogEvents
            Resource:
              - "*"
          - Sid: DynamoDBIndexAndStreamAccess
            Effect: Allow
            Action:
              - dynamodb:GetShardIterator
              - dynamodb:Scan
              - dynamodb:Query
              - dynamodb:DescribeStream
              - dynamodb:GetRecords
            Resource:
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${MSMTableName}/index/*'
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${MSMTableName}/stream/*'
          - Sid: DynamoDBTableAccess
            Effect: Allow
            Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:PutItem
              - dynamodb:DescribeTable
              - dynamodb:DeleteItem
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:Query
              - dynamodb:UpdateItem
            Resource: !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${MSMTableName}'

  MSMCleanupRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !Ref MSMCleanupManagedPolicy

  MSMAccountCleanupLambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      PackageType: Image
      Code:
        ImageUri: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/cantlose:${AccountCleanupImageName}"
      MemorySize: 128
      Role: !Sub ${MSMCleanupRole.Arn}
      Environment:
        Variables:
          NODE_ENV: !Ref MSMStageName
          DEBUG: "msm-clean-account:*,dynamolayer:*"

  MSMMessageCleanupLambdaFunction:
    Type: "AWS::Lambda::Function"
    Properties:
      PackageType: Image
      Code:
        ImageUri: !Sub "${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/cantlose:${MessageCleanupImageName}"
      MemorySize: 128
      Role: !Sub ${MSMCleanupRole.Arn}
      Environment:
        Variables:
          NODE_ENV: !Ref MSMStageName
          DEBUG: "msm-clean-message:*,dynamolayer:*"

  MSMSchedulerManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: InvokeCleanupLambda
            Effect: Allow
            Action:
              - lambda:InvokeFunction
            Resource:
              - !GetAtt MSMAccountCleanupLambdaFunction.Arn
              - !GetAtt MSMMessageCleanupLambdaFunction.Arn

  MSMSchedulerRole:
    Type: "AWS::IAM::Role"
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - scheduler.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !Ref MSMSchedulerManagedPolicy


Outputs:

  SchedulerRoleName:
    Value: !Ref MSMSchedulerRole
    Description: Name of the scheduler execution role

  AccountCleanupName:
    Value: !Ref MSMAccountCleanupLambdaFunction
    Description: Name of the account cleanup lambda

  MessageCleanupName:
    Value: !Ref MSMMessageCleanupLambdaFunction
    Description: Name of the message cleanup lambda