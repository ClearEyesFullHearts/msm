AWSTemplateFormatVersion: 2010-09-09
Description: >
  Resources needed to deploy a scheduled lambda function.

####################################################################################
Parameters:
####################################################################################

  MSMStageName:
    Type: String
    Default: test
    Description: The name of the stage to be created, also used as NODE_ENV

  MSMTableName:
    Type: String
    Default: MyTestTable
    Description: The name of the table to be created.

  SchedulerGroupName:
    Type: String
    Default: MSMCleanupGroup
    Description: Name of the scheduler group for cleanup.

  CleanupImageName:
    Type: String
    Default: mft-msm-cleanup.latest
    Description: Tag of the image to deploy.

  AccountCleanupImageName:
    Type: String
    Default: mft-msm-clean-account.latest
    Description: Tag of the image to deploy.

  MessageCleanupImageName:
    Type: String
    Default: mft-msm-clean-message.latest
    Description: Tag of the image to deploy.

####################################################################################
Resources:
####################################################################################

  MSMCleanupManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: DynamoDBIndexAndStreamAccess
            Effect: Allow
            Action:
              - dynamodb:GetShardIterator
              - dynamodb:Scan
              - dynamodb:Query
              - dynamodb:DescribeStream
              - dynamodb:GetRecords
            Resource:
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${MSMTableName}/index/*'
              - !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${MSMTableName}/stream/*'
          - Sid: DynamoDBTableAccess
            Effect: Allow
            Action:
              - dynamodb:BatchGetItem
              - dynamodb:BatchWriteItem
              - dynamodb:ConditionCheckItem
              - dynamodb:PutItem
              - dynamodb:DescribeTable
              - dynamodb:DeleteItem
              - dynamodb:GetItem
              - dynamodb:Scan
              - dynamodb:Query
              - dynamodb:UpdateItem
            Resource: !Sub 'arn:aws:dynamodb:${AWS::Region}:${AWS::AccountId}:table/${MSMTableName}'

  MSMCleanupRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - lambda.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !Ref MSMCleanupManagedPolicy
        - 'arn:aws:iam::aws:policy/service-role/AWSLambdaBasicExecutionRole'
        - 'arn:aws:iam::aws:policy/AWSXRayDaemonWriteAccess'

  MSMCleanupSchedule:
    Type: AWS::Events::Rule
    Properties:
      Description: >
        A schedule for the Lambda function..
      ScheduleExpression: 'rate(1 day)'
      State: ENABLED
      Targets:
        - Arn: !Sub ${MSMCleanupLambdaFunction.Arn}
          Id: MSMCleanupSchedule

  MSMCleanupSchedulePermission:
    Type: AWS::Lambda::Permission
    Properties:
      Action: 'lambda:InvokeFunction'
      FunctionName: !Sub ${MSMCleanupLambdaFunction.Arn}
      Principal: 'events.amazonaws.com'
      SourceArn: !Sub ${MSMCleanupSchedule.Arn}

  MSMCleanupLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      PackageType: Image
      Code:
        ImageUri: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/cantlose:${CleanupImageName}'
      MemorySize: 128
      Role: !Sub ${MSMCleanupRole.Arn}
      TracingConfig:
        Mode: Active
      Environment:
        Variables:
          NODE_ENV: !Ref MSMStageName
          KEY_REPORT_AT: 'mat'
          DEBUG: 'msm-cleanup:*,dynamolayer:*'

  MSMAccountCleanupLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      PackageType: Image
      Code:
        ImageUri: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/cantlose:${AccountCleanupImageName}'
      MemorySize: 128
      Role: !Sub ${MSMCleanupRole.Arn}
      TracingConfig:
        Mode: Active
      Environment:
        Variables:
          NODE_ENV: !Ref MSMStageName
          DEBUG: 'msm-clean-account:*,dynamolayer:*'

  MSMMessageCleanupLambdaFunction:
    Type: AWS::Lambda::Function
    Properties:
      PackageType: Image
      Code:
        ImageUri: !Sub '${AWS::AccountId}.dkr.ecr.${AWS::Region}.amazonaws.com/cantlose:${MessageCleanupImageName}'
      MemorySize: 128
      Role: !Sub ${MSMCleanupRole.Arn}
      TracingConfig:
        Mode: Active
      Environment:
        Variables:
          NODE_ENV: !Ref MSMStageName
          DEBUG: 'msm-clean-message:*,dynamolayer:*'

  MSMCleanupSchedulerGroup:
    Type: AWS::Scheduler::ScheduleGroup
    Properties:
      Name: !Ref SchedulerGroupName

  MSMSchedulerManagedPolicy:
    Type: AWS::IAM::ManagedPolicy
    Properties:
      PolicyDocument:
        Version: 2012-10-17
        Statement:
          - Sid: InvokeCleanupLambda
            Effect: Allow
            Action:
              - lambda:InvokeFunction
            Resource:
              - !GetAtt MSMAccountCleanupLambdaFunction.Arn
              - !GetAtt MSMMessageCleanupLambdaFunction.Arn

  MSMSchedulerRole:
    Type: AWS::IAM::Role
    Properties:
      AssumeRolePolicyDocument:
        Version: 2012-10-17
        Statement:
          - Effect: Allow
            Principal:
              Service:
                - scheduler.amazonaws.com
            Action:
              - sts:AssumeRole
      ManagedPolicyArns:
        - !Ref MSMSchedulerManagedPolicy


Outputs:

  GroupName:
    Value: !Ref SchedulerGroupName
    Description: Name of the scheduler group to use

  SchedulerRoleName:
    Value: !Ref MSMSchedulerRole
    Description: Name of the scheduler execution role

  AccountCleanupName:
    Value: !Ref MSMAccountCleanupLambdaFunction
    Description: Name of the account cleanup lambda

  MessageCleanupName:
    Value: !Ref MSMMessageCleanupLambdaFunction
    Description: Name of the message cleanup lambda