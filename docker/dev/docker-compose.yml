version: "3"

services:
    
  dynamodb-local:
    image: amazon/dynamodb-local:latest
    container_name: dynamodb-local
    ports:
      - "8000:8000"

  dynamodb-admin:
    image: aaronshaf/dynamodb-admin
    ports:
      - "8001:8001"
    environment:
      DYNAMO_ENDPOINT: "http://dynamodb-local:8000"
      AWS_REGION: "us-west-2"
      AWS_ACCESS_KEY_ID: local
      AWS_SECRET_ACCESS_KEY: local
    depends_on:
      - dynamodb-local

  restapi:
    build:
      context: ../../
      dockerfile: docker/files/restapi.dockerfile
    container_name: restapi
    ports:
      - 4000:4000
    depends_on: 
      - dynamodb-local
    environment:
      - DEBUG=mmsm-main:*,dynamolayer:*,secrets:*
      - NODE_ENV=dock-dev
      - AWS_REGION=us-west-2
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
      - NO_CHAIN=true

  cleanup:
    build:
      context: ../../
      dockerfile: docker/files/cleanup.dockerfile
    container_name: cleanup
    ports:
      - 9000:8080
    depends_on: 
      - dynamodb-local
    environment:
      - DEBUG=msm-cleanup:*,dynamolayer:*
      - AWS_REGION=us-west-2
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local

  connect-ws:
    build:
      context: ../../
      dockerfile: docker/files/ws-connect.dockerfile
    container_name: connect-ws
    ports:
      - 9001:8080
    depends_on: 
      - dynamodb-local
    environment:
      - DEBUG=dynamolayer:*,secrets:*,auth:*
      - NODE_ENV=dock-dev
      - AWS_REGION=us-west-2
      - AWS_ACCESS_KEY_ID=local
      - AWS_SECRET_ACCESS_KEY=local
      - KEY_AUTH_SIGN=supersecret