openapi: "3.0.0"
info:
  version: 1.0.0
  title: Most Secure Mailbox
  license:
    name: MIT
servers:
  - url: http://localhost:4000
paths:
  /users:
    post:
      summary: Create a new user
      operationId: createUser
      x-eov-operation-handler: api
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewUser'
      responses:
        '201':
          description: User created
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: Get detailed users' list
      operationId: getUsersList
      x-eov-operation-handler: api
      security:
        - bearerAuth: []
      parameters:
        - name: list
          in: query
          description: list of usernames
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/DetailedUsersList"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /attic/{at}:
    get:
      summary: Get public connection information
      operationId: attic
      x-eov-operation-handler: api
      parameters:
        - in: header
          name: X-msm-Cpk
          required: false
          description: Client DH public key
          schema:
            type: string
            format: byte
            minLength: 88
            maxLength: 88
        - name: at
          in: path
          description: Start of users name
          required: true
          schema:
            type: string
            minLength: 3
            maxLength: 35
      responses:
        '200':
          description: Attic content
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Attic"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /identity/{at}:
    get:
      summary: Login
      operationId: login
      x-eov-operation-handler: api
      parameters:
        - in: header
          name: X-msm-Pass
          required: false
          description: Password hash
          schema:
            type: string
            pattern: '^[A-Za-z0-9+\/]*(=|==)?.[A-Za-z0-9+\/]*(=|==)?.[A-Za-z0-9+\/]*(=|==)?$'
            minLength: 194
            maxLength: 194
        - name: at
          in: path
          description: Start of users name
          required: true
          schema:
            type: string
            minLength: 3
            maxLength: 35
      responses:
        '200':
          description: Encrypted Bearer token
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Identity"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /user/{at}:
    get:
      summary: Get one user informations
      operationId: getOneUser
      x-eov-operation-handler: api
      security:
        - bearerAuth: []
      parameters:
        - name: at
          in: path
          description: Username
          required: true
          schema:
            type: string
            minLength: 3
            maxLength: 35
      responses:
        '200':
          description: One user
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/User"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Delete every reference to an account
      description: Incinerate an account entirely
      operationId: incinerate
      x-eov-operation-handler: api
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: X-msm-Sig
          required: true
          description: SK signature of the body
          schema:
            $ref: "#/components/schemas/SignatureHeader"
        - name: at
          in: path
          description: Username
          required: true
          schema:
            type: string
            minLength: 3
            maxLength: 35

      responses:
        '200':
          description: The account doesn't exists anymore
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /search:
    get:
      summary: Get users' list
      operationId: searchUsers
      x-eov-operation-handler: api
      security:
        - bearerAuth: []
      parameters:
        - name: user
          in: query
          description: Start of users name
          required: true
          schema:
            type: string
            minLength: 3
      responses:
        '200':
          description: A list of users
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsersList"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /connections:
    get:
      summary: Get connected users from a list
      description: takes a list of username as query parameters and respond with those that are connected
      operationId: getConnections
      x-eov-operation-handler: api
      security:
        - bearerAuth: []
      parameters:
        - name: list
          in: query
          description: list of usernames
          required: true
          schema:
            type: array
            items:
              type: string
      responses:
        '200':
          description: A list of connected users
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/UsersList"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /subscription:
    post:
      summary: Subscribe to the push notification service
      operationId: subscribe
      x-eov-operation-handler: api
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: X-msm-Sig
          required: true
          description: SK signature of the body
          schema:
            $ref: "#/components/schemas/SignatureHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Subcription'
      responses:
        '201':
          description: Subscription created
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /contacts:
    put:
      summary: Save the contact list
      operationId: setUserContactList
      x-eov-operation-handler: api
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: X-msm-Sig
          required: true
          description: SK signature of the body
          schema:
            $ref: "#/components/schemas/SignatureHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Challenge'
      responses:
        '200':
          description: List saved
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /vault:
    put:
      summary: Save the user encrypted secret key
      operationId: setUserVaultItem
      x-eov-operation-handler: api
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: X-msm-Sig
          required: true
          description: SK signature of the body
          schema:
            $ref: "#/components/schemas/SignatureHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Vault'
      responses:
        '200':
          description: Key saved
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Remove the user encrypted secret key
      operationId: removeUserVaultItem
      x-eov-operation-handler: api
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: X-msm-Sig
          required: true
          description: SK signature of the body
          schema:
            $ref: "#/components/schemas/SignatureHeader"
      responses:
        '200':
          description: Vault item is removed
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /inbox:
    get:
      summary: Get a user inbox
      description: |
        A list of messages headers, the challenge should contain:
        - from
        - sentAt
        - title
      operationId: getInbox
      x-eov-operation-handler: api
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of messages headers
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Inbox"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /message:
    post:
      summary: Send a message
      operationId: writeMessage
      x-eov-operation-handler: api
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: X-msm-Sig
          required: true
          description: SK signature of the body
          schema:
            $ref: "#/components/schemas/SignatureHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Post'
      responses:
        '201':
          description: Message sent
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /message/{msgId}:
    get:
      summary: Get a message content and delete it from DB
      description: |
        One full message, the challenge should contain:
        - from
        - sentAt
        - title
        - content
      operationId: getMessage
      x-eov-operation-handler: api
      security:
        - bearerAuth: []
      parameters:
        - name: msgId
          in: path
          required: true
          description: The ID of the message to fetch
          schema:
            type: integer
      responses:
        '200':
          description: A complete message
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Message"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Force removal of a message
      description: Delete a message from db
      operationId: removeMessage
      x-eov-operation-handler: api
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: X-msm-Sig
          required: true
          description: SK signature of the body
          schema:
            $ref: "#/components/schemas/SignatureHeader"
        - name: msgId
          in: path
          required: true
          description: The ID of the message to delete
          schema:
            type: integer
      responses:
        '200':
          description: The message is removed
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /groups:
    post:
      summary: Create a new group
      operationId: createGroup
      x-eov-operation-handler: api
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: X-msm-Sig
          required: true
          schema:
            $ref: "#/components/schemas/SignatureHeader"
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewGroup'
      responses:
        '201':
          description: Group created
          content:
            application/json:
              schema:
                type: object
                required:
                  - id
                properties:
                  id:
                    type: string
                    format: uuid
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    get:
      summary: Get users' group list
      operationId: getGroups
      x-eov-operation-handler: api
      security:
        - bearerAuth: []
      responses:
        '200':
          description: A list of users' groups as a challenge
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Challenge"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /group/{id}:
    get:
      summary: Get group information
      operationId: getOneGroup
      x-eov-operation-handler: api
      security:
        - bearerAuth: []
      parameters:
        - name: id
          in: path
          description: group id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '200':
          description: A list of users' groups as a challenge
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Challenge"
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Admin delete the group
      operationId: deleteGroup
      x-eov-operation-handler: api
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: X-msm-Sig
          required: true
          schema:
            $ref: "#/components/schemas/SignatureHeader"
        - name: id
          in: path
          description: group id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: The group is deleted
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    put:
      summary: Change the name of the group
      operationId: setGroupName
      x-eov-operation-handler: api
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: X-msm-Sig
          required: true
          description: SK signature of the body
          schema:
            $ref: "#/components/schemas/SignatureHeader"
        - name: id
          in: path
          description: group id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupName'
      responses:
        '200':
          description: Name updated
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    
  /group/{id}/member:
    post:
      summary: Add a member to a group
      operationId: groupAddMember
      x-eov-operation-handler: api
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: X-msm-Sig
          required: true
          schema:
            $ref: "#/components/schemas/SignatureHeader"
        - name: id
          in: path
          description: group id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewMember'
      responses:
        '201':
          description: Member added
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    delete:
      summary: Member unsubscribe from a group
      operationId: groupRemoveMember
      x-eov-operation-handler: api
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: X-msm-Sig
          required: true
          schema:
            $ref: "#/components/schemas/SignatureHeader"
        - name: id
          in: path
          description: group id
          required: true
          schema:
            type: string
            format: uuid
      responses:
        '204':
          description: The member is removed from the group
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
  
  /group/{id}/member/{username}:
    put:
      summary: Change admin status to a user
      operationId: setMemberStatus
      x-eov-operation-handler: api
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: X-msm-Sig
          required: true
          description: SK signature of the body
          schema:
            $ref: "#/components/schemas/SignatureHeader"
        - name: id
          in: path
          description: group id
          required: true
          schema:
            type: string
            format: uuid
        - name: username
          in: path
          required: true
          schema:
            type: string
            minLength: 3
            maxLength: 35
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/MemberStatus'
      responses:
        '200':
          description: Status updated
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"
    
  /group/{id}/revoke/{username}:
    post:
      summary: Revoke a member's access right
      operationId: revokeMember
      x-eov-operation-handler: api
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: X-msm-Sig
          required: true
          schema:
            $ref: "#/components/schemas/SignatureHeader"
        - name: id
          in: path
          description: group id
          required: true
          schema:
            type: string
            format: uuid
        - name: username
          in: path
          description: member's username
          required: true
          schema:
            type: string
            minLength: 3
            maxLength: 35
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/NewKeysList'
      responses:
        '200':
          description: Member revoked and all keys updated
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

  /group/{id}/message:
    post:
      summary: Send a message to a group
      operationId: writeGroup
      x-eov-operation-handler: api
      security:
        - bearerAuth: []
      parameters:
        - in: header
          name: X-msm-Sig
          required: true
          schema:
            $ref: "#/components/schemas/SignatureHeader"
        - name: id
          in: path
          description: group id
          required: true
          schema:
            type: string
            format: uuid
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/GroupPost'
      responses:
        '201':
          description: Message sent
        default:
          description: unexpected error
          content:
            application/json:
              schema:
                $ref: "#/components/schemas/Error"

components:
  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
  schemas:
    SignatureHeader:
      description: SK signature of the body
      type: string
      format: byte
      minLength: 172
      maxLength: 172
    NewUser:
      type: object
      required:
        - at
        - key
        - signature
        - hash
      properties:
        at:
          type: string
          minLength: 3
          maxLength: 35
        key:
          type: string
          minLength: 788
          maxLength: 788
        signature:
          type: string
          minLength: 268
          maxLength: 268
        hash:
          type: string
          format: byte
          minLength: 172
          maxLength: 172
    Challenge:
      type: object
      required:
        - token
        - passphrase
        - iv
      properties:
        token:
          type: string
          format: byte
        passphrase:
          type: string
          format: byte
          minLength: 684
          maxLength: 684
        iv:
          type: string
          format: byte
          minLength: 24
          maxLength: 24
    Identity:
      allOf:
        - $ref: '#/components/schemas/Challenge'
        - type: object
          properties:
            vault:
              $ref: "#/components/schemas/VaultItem"
    User:
      type: object
      required:
        - id
        - at
        - key
        - signature
      properties:
        id:
          type: string
        at:
          type: string
          minLength: 3
          maxLength: 35
        key:
          type: string
          minLength: 788
          maxLength: 788
        signature:
          type: string
          minLength: 268
          maxLength: 268
    UsersList:
      type: array
      items:
        type: string
        minLength: 3
        maxLength: 35
    DetailedUsersList:
      type: array
      items:
        $ref: "#/components/schemas/User"
    Inbox:
      type: array
      items:
        $ref: "#/components/schemas/InboxHeader"
    InboxHeader:
      type: object
      required:
        - id
        - challenge
      properties:
        id:
          type: integer
        challenge:
          $ref: "#/components/schemas/Challenge"
    Message:
      type: object
      required:
        - id
        - challenge
      properties:
        id:
          type: integer
        challenge:
          $ref: "#/components/schemas/Challenge"
    Post:
      type: object
      required:
        - to
        - title
        - content
      properties:
        to:
          type: string
          minLength: 3
          maxLength: 35
        title:
          type: string
          format: byte
          minLength: 684
          maxLength: 684
        content:
          type: string
          format: byte
          minLength: 684
          maxLength: 684
    Vault:
      type: object
      required:
        - vault
        - iv
        - sessionSalt
        - passSalt
      properties:
        vault:
          type: string
          format: byte
          minLength: 7864
          maxLength: 7864
        iv:
          type: string
          format: byte
          minLength: 24
          maxLength: 24
        sessionSalt:
          type: string
          format: byte
          minLength: 88
          maxLength: 88
        passSalt:
          type: string
          format: byte
          minLength: 88
          maxLength: 88
    Attic:
      type: object
      required:
        - salt
        - key
      properties:
        salt:
          type: string
          format: byte
          minLength: 88
          maxLength: 88
        key:
          type: string
          format: byte
          minLength: 88
          maxLength: 88
    VaultItem:
      type: object
      required:
        - token
        - iv
        - salt
      properties:
        token:
          type: string
          format: byte
          minLength: 7400
          maxLength: 7400
        iv:
          type: string
          format: byte
          minLength: 24
          maxLength: 24
        salt:
          type: string
          format: byte
          minLength: 88
          maxLength: 88
    Subcription:
      type: object
      required:
        - endpoint
        - keys
      properties:
        endpoint:
          type: string
          pattern: '^https:\/\/(\bandroid\.googleapis\.com\b|\bfcm\.googleapis\.com\b|\bupdates\.push\.services\.mozilla\.com\b|\bupdates-autopush\.stage\.mozaws\.net\b|\bupdates-autopush\.dev\.mozaws\.net\b|\b.*\.notify\.windows\.com\b|\b.*\.push\.apple\.com\b)\/'
        keys:
          type: object
          required:
            - auth
            - p256dh
          properties:
            auth:
              type: string
              minLength: 22
              maxLength: 22
            p256dh:
              type: string
              minLength: 87
              maxLength: 87
    NewGroup:
      type: object
      required:
        - name
        - key
      properties:
        name:
          type: string
          minLength: 5
          maxLength: 125
        key:
          type: string
          format: byte
          minLength: 684
          maxLength: 684
    NewMember:
      type: object
      required:
        - username
        - key
      properties:
        username:
          type: string
          minLength: 3
          maxLength: 35
        key:
          type: string
          format: byte
          minLength: 684
          maxLength: 684
    NewKeysList:
      type: array
      items:
        $ref: "#/components/schemas/NewMember"
    EncryptedItem:
      type: object
      required:
        - token
        - iv
      properties:
        token:
          type: string
          format: byte
        iv:
          type: string
          format: byte
          minLength: 24
          maxLength: 24
    GroupPost:
      type: object
      required:
        - title
        - content
      properties:
        title:
          $ref: "#/components/schemas/EncryptedItem"
        content:
          $ref: "#/components/schemas/EncryptedItem"
    MemberStatus:
      type: object
      required:
        - isAdmin
      properties:
        isAdmin:
          type: boolean
    GroupName:
      type: object
      required:
        - name
      properties:
        name:
          type: string
          minLength: 5
          maxLength: 125
    Error:
      type: object
      properties:
        status:
          type: integer
          format: int32
        code:
          type: string
        message:
          type: string
